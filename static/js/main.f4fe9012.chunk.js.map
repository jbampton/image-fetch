{"version":3,"sources":["components/Image.js","components/GalleryContext.js","components/Gallery.js","components/Forms.js","layout/Footer.js","layout/Header.js","layout/Search.js","App.js","serviceWorker.js","index.js"],"names":["Img","styled","img","Image","props","className","src","Large","alt","Author","Downloads","href","onClick","window","open","GalleryContext","createContext","GalleryProvider","useState","query","quantity","imageType","colors","per_page","uri","encodeURIComponent","values","setValues","Provider","value","children","axios","require","Gallery","hits","data","setData","useContext","isLoading","setIsLoading","isError","setIsError","URL","useEffect","a","result","fetchData","console","log","totalHits","Spinner","type","color","slice","map","key","largeImageURL","user","downloads","Forms","x","state","setState","handleChange","e","target","name","checked","onSubmit","preventDefault","scroll","placeholder","onChange","axis","xstep","xmin","xmax","class","id","for","func","Footer","Header","isOpen","setIsOpen","Button","style","marginBottom","Collapse","Search","config","theme","global","App","myRef","useRef","Grommet","ref","scrollTo","top","current","offsetTop","left","behavior","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f4fe9012.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst Img = styled.img`\n  max-width: 300px !important;\n  height: 200px !important;\n\n  .hover {\n    transition: 0.2s ease;\n  }\n  .hover:hover {\n    background-color: #f0f0f0;\n    transform: scale(1.05);\n  }\n  @media screen and (max-width: 500px) {\n    .PixImage {\n      max-width: 200px !important;\n      height: 100px !important;\n    }\n  }\n`;\n\nexport default function Image(props) {\n  return (\n    <div className=\"col-6 col-sm-3 p-3 text-center\">\n      <div className=\"card hover\">\n        <Img className=\"m-3 img-fluid align-self-center PixImage \" src={props.Large} alt=\"\" />\n        <div className=\"card-footer\">\n          <small className=\"\">\n            Author: <strong>{props.Author}</strong>\n          </small>\n          <p className=\"fa-sm font-weight-light\">\n            Downloads: {props.Downloads}{' '}\n            <button\n              className=\"btn btn-link  m-1\"\n              href={props.Large}\n              onClick={() => window.open(props.Large, '_blank')}\n            >\n              <i className=\"fas fa-file-download\" />\n            </button>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, createContext } from 'react';\n\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nexport const GalleryContext = createContext();\n\nexport const GalleryProvider = (props) => {\n  const [values, setValues] = useState({\n    query: 'query',\n    quantity: 12,\n    imageType: 'photo',\n    colors: '',\n    per_page: 20,\n    uri: 'https://pixabay.com/api/?key=' + API_KEY + '&q=' + encodeURIComponent('query'),\n  });\n\n  return (\n    <GalleryContext.Provider value={[values, setValues]}>{props.children}</GalleryContext.Provider>\n  );\n};\n","import React, {useState,useEffect,useContext} from 'react'\r\nimport { Spinner } from 'reactstrap';\r\nimport Image from \"./Image\"\r\nimport { GalleryContext } from './GalleryContext';\r\nconst axios = require('axios');\r\n\r\nexport default function Gallery(props) {\r\n    //Api data\r\n    const [data, setData] = useState({ hits: [] });\r\n    //Context values\r\n    const [values] = useContext(GalleryContext);\r\n     // Loading / error states\r\n     const [isLoading, setIsLoading] = useState(false);\r\n     const [isError, setIsError] = useState(false);\r\n    \r\n\r\n    \r\n    const URL = values.uri;\r\n    //const URL = \"https://pixabay.com/api/?key=\"+API_KEY+\"&q=\"+encodeURIComponent(props.query)+\"&image_type\"+props.quantity+\"editors_choice=true&colors=\"+props.colors;\r\n\r\n    useEffect(() => {\r\n      \r\n        const fetchData = async () => {\r\n            setIsError(false);\r\n            setIsLoading(true);\r\n            try {\r\n          const result = await axios(\r\n            URL,\r\n          );\r\n          setData(result.data);\r\n        }catch(error){\r\n            setIsError(true);\r\n        }\r\n          setIsLoading(false);\r\n          \r\n        };\r\n        fetchData();\r\n        \r\n      }, [URL,values.quantity]);\r\n     \r\n     \r\n      console.log(data.totalHits)\r\n      console.log(URL)\r\n    return (\r\n        <div className=\"row p-2\">\r\n            {data.totalHits === 0 && <div className=\"col text-white text-center lead\" > no results...</div>}\r\n            {isError && <div className=\"col text-white text-center lead\">Something went wrong ...</div>}\r\n            {isLoading ? (<div className=\"m-auto fa-5x fa-pulse\"><Spinner type=\"grow\" color=\"success\" /></div>) : ( <>\r\n      {data.hits.slice(0,values.quantity).map(img => (\r\n        \r\n       <Image key={img.largeImageURL} Large={img.largeImageURL} Author={img.user} Downloads={img.downloads}/>\r\n       \r\n      ))}\r\n      </>\r\n    )}  \r\n    \r\n        </div>\r\n        \r\n    )\r\n}\r\n","import React, { useState, useContext } from 'react';\nimport { GalleryContext } from './GalleryContext';\nimport Slider from 'react-input-slider';\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nexport default function Forms(props) {\n  const [values, setValues] = useContext(GalleryContext);\n  const [state, setState] = useState({ x: 12 });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    props.scroll();\n    const func = () =>\n      setValues({\n        ...values,\n        uri:\n          'https://pixabay.com/api/?key=' +\n          API_KEY +\n          '&q=' +\n          encodeURIComponent(values.query) +\n          '&image_type=' +\n          values.imageType +\n          '&colors=' +\n          values.colors,\n        quantity: state.x,\n      });\n    func();\n  };\n\n  function handleChange(e) {\n    const { name, value, type, checked } = e.target;\n    if (type === 'checkbox') {\n      setValues({\n        ...values,\n        [name]: checked,\n      });\n    } else {\n      setValues({ ...values, [name]: value });\n    }\n  }\n\n  return (\n    <div /* style={{height: \"100vh\"}} */ className=\"row d-flex justify-content-center\">\n      <form className=\"col-12 col-sm-4\" onSubmit={handleSubmit}>\n        <input\n          className=\"form-control form-inline  text-center rounded-4 \"\n          name=\"query\"\n          value={props.query}\n          type=\"text\"\n          placeholder=\"search...\"\n          onChange={handleChange}\n        />{' '}\n        <br />\n        <br />\n        <div className=\"\">\n          <p className=\"\">results: {state.x}</p>\n          <Slider\n            axis=\"x\"\n            name=\"quantity\"\n            xstep={2}\n            xmin={2}\n            xmax={20}\n            x={state.x}\n            onChange={({ x }) => setState({ x: x })}\n          />\n        </div>\n        <br />\n        <br />\n        <label>\n          Color:{' '}\n          <select class=\"custom-select\" name=\"colors\" value={values.colors} onChange={handleChange}>\n            <option value=\"\">All</option>\n            <option value=\"red\">Red</option>\n            <option value=\"green\">Green</option>\n            <option value=\"blue\">Blue</option>\n          </select>{' '}\n        </label>{' '}\n        <br />\n        <br />{' '}\n        <div className=\"custom-control custom-radio\">\n          <input\n            className=\"custom-control-input\"\n            id=\"customRadio1\"\n            name=\"imageType\"\n            value=\"photo\"\n            type=\"radio\"\n            checked={values.imageType === 'photo'}\n            onChange={handleChange}\n          />\n          <label className=\"custom-control-label\" for=\"customRadio1\">\n            {' '}\n            Photo{' '}\n          </label>{' '}\n        </div>\n        <br />{' '}\n        <div className=\"custom-control custom-radio\">\n          <input\n            className=\"custom-control-input\"\n            id=\"customRadio2\"\n            name=\"imageType\"\n            value=\"illustration\"\n            type=\"radio\"\n            checked={values.imageType === 'illustration'}\n            onChange={handleChange}\n          />\n          <label className=\"custom-control-label\" for=\"customRadio2\">\n            {' '}\n            Illustration{' '}\n          </label>\n        </div>\n        <br />{' '}\n        <div className=\"custom-control custom-radio\">\n          <input\n            className=\"custom-control-input\"\n            id=\"customRadio3\"\n            name=\"imageType\"\n            value=\"vector\"\n            type=\"radio\"\n            checked={values.imageType === 'vector'}\n            onChange={handleChange}\n          />\n          <label className=\"custom-control-label\" for=\"customRadio3\">\n            {' '}\n            Vector{' '}\n          </label>\n        </div>\n        <br />\n        <button className=\"btn btn-primary\" type=\"submit\" onClick={values.func}>\n          Search\n        </button>\n      </form>\n    </div>\n  );\n}\n","import React from 'react'\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <div className=\"row mt-2\">\r\n          <div className=\"col text-center text-white mb-2\">\r\n          <hr />\r\n          <footer>\r\n          <small className=\"text-primary\"> &copy; Spectral Apps </small>\r\n          </footer>\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n","import React,{ useState} from 'react'\r\nimport { Collapse, Button} from 'reactstrap';\r\n\r\nexport default function Header() {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggle = () => setIsOpen(!isOpen);\r\n    return (\r\n    \r\n        <div className=\"row\"> \r\n          <div className=\"col-12 bg-dark text-center text-white\">\r\n            <div className=\"jumbotron bg-dark\">\r\n              <h1 className=\"display-4\">Welcome</h1>\r\n              <p className=\"lead\">Spectral Apps fetch project</p>\r\n              \r\n              <Button color=\"link\" onClick={toggle} style={{ marginBottom: '1rem' }}><i className=\"fas fa-question-circle\"></i></Button>\r\n      <Collapse className=\"collapse row mt-2 px-3 text-center\" isOpen={isOpen}>\r\n              <p>Description: Search Photos, Vectors and Illustrations from Pixabay \r\n              <br/>then the App displays the results (Images, Authors, number of downloads) (Download any Image)</p>\r\n              </Collapse>\r\n             \r\n            </div>\r\n            <hr/>\r\n          </div>\r\n          \r\n        </div>\r\n        \r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Search(props) {\r\n    return (\r\n        <div className=\"row mt-2\">\r\n        \r\n        <div  id=\"search\" className=\"col bg-dark text-center text-white\">\r\n        \r\n        {props.children}\r\n        <hr />\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useRef } from 'react';\nimport Gallery from './components/Gallery';\nimport Forms from './components/Forms';\nimport Footer from './layout/Footer';\nimport Header from './layout/Header';\nimport Search from './layout/Search';\nimport { GalleryProvider } from './components/GalleryContext';\nimport { Grommet } from 'grommet';\n\nrequire('dotenv').config();\n\nconst theme = {\n  global: {},\n};\n\nconst scrollToRef = (ref) =>\n  window.scrollTo({\n    top: ref.current.offsetTop,\n    left: 0,\n    behavior: 'smooth',\n  });\nfunction App(props) {\n  const myRef = useRef(null);\n  const executeScroll = () => scrollToRef(myRef);\n  return (\n    <div className=\"App container-fluid bg-dark\">\n      <Grommet theme={theme}>\n        <Header />\n        <GalleryProvider>\n          <Search>\n            <Forms scroll={executeScroll} />\n          </Search>\n\n          <div className=\"row\">\n            <div ref={myRef} id=\"gallery\" className=\"col bg-dark\">\n              <Gallery />\n            </div>\n          </div>\n        </GalleryProvider>\n        <Footer />\n      </Grommet>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}